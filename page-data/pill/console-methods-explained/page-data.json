{"componentChunkName":"component---src-templates-pill-template-index-js","path":"/pill/console-methods-explained","result":{"data":{"markdownRemark":{"html":"<h1>Console methods explained</h1>\n<h2>🆒 Console outputs and levels</h2>\n<ul>\n<li>\n<p><code class=\"language-text\">console.log</code> Normal output to stdout</p>\n</li>\n<li>\n<p><code class=\"language-text\">console.info</code> Normal output to stdout with log level <code class=\"language-text\">info</code></p>\n</li>\n<li>\n<p><code class=\"language-text\">console.error</code> Output is displayed at stderr</p>\n</li>\n<li>\n<p><code class=\"language-text\">console.warn</code> Warn output is displayed at stdout with log level <code class=\"language-text\">warn</code></p>\n</li>\n<li>\n<p><code class=\"language-text\">console.debug</code> Output to stdout with log level <code class=\"language-text\">debug</code></p>\n</li>\n</ul>\n<p>Examples:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'This is a normal log line'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">'This is a infomation line'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'This is a error line'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'This is a warning line'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token string\">'This is a debug line'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>🆒 Console utilities</h2>\n<ul>\n<li>\n<p><code class=\"language-text\">console.clear</code> Clear the console</p>\n</li>\n<li>\n<p><code class=\"language-text\">console.count(label)</code> Log the number of times this line has been called with same label</p>\n</li>\n<li>\n<p><code class=\"language-text\">console.countReset(label)</code> Reset the counter for given label</p>\n</li>\n</ul>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">console<span class=\"token punctuation\">.</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Output should show: test: 1</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Output should show: test: 2</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Output should show: test: 3</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">countReset</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Output should show: test: 1</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">console.time(label)</code> Starts a timer to a given label</li>\n<li><code class=\"language-text\">console.timeLog(label)</code> Show the value of the specified timer label (in miliseconds)</li>\n<li><code class=\"language-text\">console.timeEnd(label)</code> Stops and show the timer of given label (in miliseconds)</li>\n</ul>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">console<span class=\"token punctuation\">.</span><span class=\"token function\">timer</span><span class=\"token punctuation\">(</span><span class=\"token string\">'testTimer'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// wait 1 second</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">timerLog</span><span class=\"token punctuation\">(</span><span class=\"token string\">'testTimer'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Output should show: testTimer: 1.000 ms</span>\n<span class=\"token comment\">// and wait 1.5 seconds :P</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">timerEnd</span><span class=\"token punctuation\">(</span><span class=\"token string\">'testTimer'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Output should show: testTimer: 2.500 ms</span></code></pre></div>\n<h2>🆒 Using console to display data</h2>\n<ul>\n<li>\n<p><code class=\"language-text\">console.dir(object)</code> Display the given object as JSON tree</p>\n</li>\n<li>\n<p><code class=\"language-text\">console.table(object, [columns])</code> Displays tabular data as a table (Array, Sets...) you can filter what <code class=\"language-text\">columns</code> you want to show</p>\n</li>\n</ul>\n<p>Examples:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> arrayOfObjects <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'one'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">odd</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'two'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">odd</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'one'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">odd</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Display as JSON tree</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">dir</span><span class=\"token punctuation\">(</span>arrayOfObjects<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Output:</span>\n<span class=\"token comment\">// [</span>\n<span class=\"token comment\">//   { name: 'one', odd: false, count: 1 },</span>\n<span class=\"token comment\">//   { name: 'two', odd: true, count: 2 },</span>\n<span class=\"token comment\">//   { name: 'one', odd: false, count: 3 }</span>\n<span class=\"token comment\">// ]</span>\n\n<span class=\"token comment\">// Render a table with all columns</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">table</span><span class=\"token punctuation\">(</span>arrayOfObjects<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Output</span>\n<span class=\"token comment\">// ┌─────────┬───────┬───────┬───────┐</span>\n<span class=\"token comment\">// │ (index) │ name  │  odd  │ count │</span>\n<span class=\"token comment\">// ├─────────┼───────┼───────┼───────┤</span>\n<span class=\"token comment\">// │    0    │ 'one' │ false │   1   │</span>\n<span class=\"token comment\">// │    1    │ 'two' │ true  │   2   │</span>\n<span class=\"token comment\">// │    2    │ 'one' │ false │   3   │</span>\n<span class=\"token comment\">// └─────────┴───────┴───────┴───────┘</span>\n\n<span class=\"token comment\">// Render a table filtering columns</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">table</span><span class=\"token punctuation\">(</span>arrayOfObjects<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'odd'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Output</span>\n<span class=\"token comment\">// ┌─────────┬───────┬───────┐</span>\n<span class=\"token comment\">// │ (index) │ name  │  odd  │</span>\n<span class=\"token comment\">// ├─────────┼───────┼───────┤</span>\n<span class=\"token comment\">// │    0    │ 'one' │ false │</span>\n<span class=\"token comment\">// │    1    │ 'two' │ true  │</span>\n<span class=\"token comment\">// │    2    │ 'one' │ false │</span>\n<span class=\"token comment\">// └─────────┴───────┴───────┘</span>\n</code></pre></div>\n<h2>🆒 Error handling and debug utilities</h2>\n<ul>\n<li><code class=\"language-text\">console.trace( message, object)</code></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> testObject <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">awesome</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">boring</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">trace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Trace dump text'</span><span class=\"token punctuation\">,</span> testObject <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Output</span>\n<span class=\"token literal-property property\">Trace</span><span class=\"token operator\">:</span> Trace dump text <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">awesome</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">boring</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span>\n    at Object<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>anonymous<span class=\"token operator\">></span> <span class=\"token punctuation\">(</span><span class=\"token operator\">/</span>code<span class=\"token operator\">/</span>guidesmiths<span class=\"token operator\">/</span>js<span class=\"token operator\">-</span>pills<span class=\"token operator\">/</span>basic<span class=\"token operator\">/</span>console<span class=\"token operator\">-</span>explained<span class=\"token operator\">/</span>index<span class=\"token punctuation\">.</span>js<span class=\"token operator\">:</span><span class=\"token number\">48</span><span class=\"token operator\">:</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span>\n    at Module<span class=\"token punctuation\">.</span><span class=\"token function\">_compile</span> <span class=\"token punctuation\">(</span>internal<span class=\"token operator\">/</span>modules<span class=\"token operator\">/</span>cjs<span class=\"token operator\">/</span>loader<span class=\"token punctuation\">.</span>js<span class=\"token operator\">:</span><span class=\"token number\">1138</span><span class=\"token operator\">:</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span>\n    at Object<span class=\"token punctuation\">.</span>Module<span class=\"token punctuation\">.</span>_extensions<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token function\">js</span> <span class=\"token punctuation\">(</span>internal<span class=\"token operator\">/</span>modules<span class=\"token operator\">/</span>cjs<span class=\"token operator\">/</span>loader<span class=\"token punctuation\">.</span>js<span class=\"token operator\">:</span><span class=\"token number\">1158</span><span class=\"token operator\">:</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n    at Module<span class=\"token punctuation\">.</span><span class=\"token function\">load</span> <span class=\"token punctuation\">(</span>internal<span class=\"token operator\">/</span>modules<span class=\"token operator\">/</span>cjs<span class=\"token operator\">/</span>loader<span class=\"token punctuation\">.</span>js<span class=\"token operator\">:</span><span class=\"token number\">986</span><span class=\"token operator\">:</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span>\n    at Function<span class=\"token punctuation\">.</span>Module<span class=\"token punctuation\">.</span><span class=\"token function\">_load</span> <span class=\"token punctuation\">(</span>internal<span class=\"token operator\">/</span>modules<span class=\"token operator\">/</span>cjs<span class=\"token operator\">/</span>loader<span class=\"token punctuation\">.</span>js<span class=\"token operator\">:</span><span class=\"token number\">879</span><span class=\"token operator\">:</span><span class=\"token number\">14</span><span class=\"token punctuation\">)</span>\n    at Function<span class=\"token punctuation\">.</span>executeUserEntryPoint <span class=\"token punctuation\">[</span><span class=\"token keyword\">as</span> runMain<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span>internal<span class=\"token operator\">/</span>modules<span class=\"token operator\">/</span>run_main<span class=\"token punctuation\">.</span>js<span class=\"token operator\">:</span><span class=\"token number\">71</span><span class=\"token operator\">:</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span>\n    at internal<span class=\"token operator\">/</span>main<span class=\"token operator\">/</span>run_main_module<span class=\"token punctuation\">.</span>js<span class=\"token operator\">:</span><span class=\"token number\">17</span><span class=\"token operator\">:</span><span class=\"token number\">47</span>\n</code></pre></div>\n<ul>\n<li><code class=\"language-text\">console.assert(assertion, message)</code> writes an error message to the console if the assertion is false. If the assertion is true, nothing happens.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> x <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> y <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> reason <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>x<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> is expected to be less than </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>y<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">&lt;</span> y<span class=\"token punctuation\">,</span> reason<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Output</span>\nAssertion failed<span class=\"token operator\">:</span> <span class=\"token number\">5</span> is expected to be less than <span class=\"token number\">3</span>\n</code></pre></div>","frontmatter":{"date":"November 18, 2020","slug":"/pill/console-methods-explained","title":"Console methods explained","author":""}}},"pageContext":{"slug":"/pill/console-methods-explained"}},"staticQueryHashes":["2744294623","63159454"]}