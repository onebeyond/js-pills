{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"slug":"/pill/regular-expressions","title":"RegEx: basic functions and groups property","description":"A regular expression is a sequence of characters that specifies a search or a pattern. Some of the functions are exec() and test(), in this js-pill we will see the basic functions and the groups property adventages."},"id":"7d941345-0f76-5a88-90d3-2538e14565f3"}},{"node":{"frontmatter":{"slug":"/pill/array-truncation","title":"Array truncation","description":"This techniques can lock the arrayâ€™s size, this is very useful to delete some elements of the array based on the number of elements you want to set."},"id":"f585ab2a-fe6e-5041-ae5b-e491b114c5e2"}},{"node":{"frontmatter":{"slug":"/pill/check-variables-with-and-operator","title":"Check variables with && (and the new ?. operator)","description":"How to check values with the && (AND) operator and the ?. (optional chaning) operator"},"id":"de110e1e-5daf-5f41-966a-d173d42259b0"}},{"node":{"frontmatter":{"slug":"/pill/prototype-pollution","title":"Prototype pollution","description":"This pill explain what a Prototype pollution is and how to prevent it"},"id":"7d89cfc1-e8a2-5070-a3d1-ca6d68cbabcf"}},{"node":{"frontmatter":{"slug":"/pill/short-circuit-conditionals","title":"Short circuit conditionals","description":"Short-circuit evaluation using logical AND (&&) and OR (||) operators to assing values"},"id":"7ff40917-a785-5725-8888-662bda32b7e0"}},{"node":{"frontmatter":{"slug":"/pill/semicolon-usage","title":"Semicolon usage","description":"Semicolons are not required in JavaScript. This is because JavaScript has a feature called Automatic Semicolon Insertion"},"id":"1e741b43-e677-53a4-86b1-fde932bf0d7a"}},{"node":{"frontmatter":{"slug":"/pill/assert-testing","title":"Assert Testing","description":"The assert module provides a set of assertion functions for verifying invariants."},"id":"5ea35b1d-f224-53cd-8b97-0fe061339a58"}},{"node":{"frontmatter":{"slug":"/pill/replace-all","title":"Replace all","description":"We're presenting several ways to replace all the occurrences of a substring within a string in Javascript."},"id":"b8e33eb5-4774-5375-8c51-771941836335"}},{"node":{"frontmatter":{"slug":"/pill/async-await-iterations","title":"Async Await iterations","description":"Do you want to make asynchronous request sequentially? Using async await can be tricky. Let's see why."},"id":"e2861a4f-e1f8-5df9-afe1-c041235df307"}},{"node":{"frontmatter":{"slug":"/pill/in-operator","title":"In operator","description":"The `in` operator returns true if the specified property is in the specified object or its prototype chain."},"id":"7eccf469-fb63-5a39-a20f-32882b6208f1"}},{"node":{"frontmatter":{"slug":"/pill/set-default-values","title":"Set Default Values","description":"Here are four ways to set a default value for a variable in JavaScript, each one of them with its pros and cons."},"id":"5aeafe1b-7b9d-5c48-ab48-9dca0eb42247"}},{"node":{"frontmatter":{"slug":"/pill/map","title":"Map","description":"The `map()` method creates a new array with the results of applying a function on every element of an original array without mutating it."},"id":"0d10c3c7-a4ed-5e5a-bc61-6249b537b509"}},{"node":{"frontmatter":{"slug":"/pill/shuffle-an-arrays-elements","title":"Shuffle an array's elements","description":"Shuffling an array consists on randomly re-arrange the content of that structure. A simple and easy way to shuffle the elements of an array is the following:"},"id":"71c4e636-49f8-59fb-9d50-0443aed46995"}},{"node":{"frontmatter":{"slug":"/pill/compose","title":"compose","description":"Compose is a system design principle that allows us to dynamically comibine serveral funcions and returns the resut."},"id":"a10e60c1-1105-5740-9ae8-6da8adf80819"}},{"node":{"frontmatter":{"slug":"/pill/check-conditions-concurrently","title":"Check conditions concurrently","description":"_A system is said to be **concurrent** if it can support two or more actions in progress at the same time. A system is said to be **parallel** if it can support two or more actions executing simultaneously._"},"id":"f41564b2-53d1-5e5d-b5b8-96f06eefa86f"}},{"node":{"frontmatter":{"slug":"/pill/console-methods-explained","title":"Console methods explained","description":"Console methods explained"},"id":"e3537732-2497-5976-87c2-755172b746af"}},{"node":{"frontmatter":{"slug":"/pill/creating-an-array-of-consecutive-numbers","title":"Creating an array of consecutive numbers","description":"This is a collection of examples on how we can create an <b>array of consecutive numbers from 1 to n</b> in JavaScript, from the classic for loop to the ES6 Array class methods."},"id":"4605a3db-0a7c-573d-a7ae-241bdf7b8d47"}},{"node":{"frontmatter":{"slug":"/pill/clone-javascript-objects","title":"Clone Javascript Objects","description":"Objects in Javascript are references values, so you can't just copy using assing operator `=`"},"id":"18fec2d5-08dc-50f6-9658-e3a01412ea04"}},{"node":{"frontmatter":{"slug":"/pill/remove-falsy-values-from-an-array","title":"Remove falsy values from an array","description":"Remove falsy values from an array"},"id":"ea442778-b5e4-5829-8c54-c35e8e4a060c"}},{"node":{"frontmatter":{"slug":"/pill/converting-to-boolean-using-!!-operator","title":"Converting to boolean using `!!` operator","description":"JavaScript has a Boolean data type. It can **only** take the values true or false, like YES/NO or ON/OFF"},"id":"36c615e9-db21-50ad-9ccd-63d44d3b010c"}},{"node":{"frontmatter":{"slug":"/pill/currying","title":"Currying","description":"This is a technique which involves converting a function which takes multiple arguments into a series of smaller cascaded functions which each take a single argument and return a function, except for the last cascaded function which returns the final result."},"id":"1171cc35-0476-5eb6-8067-29b08aa7eb7f"}},{"node":{"frontmatter":{"slug":"/pill/dedupe-arrays","title":"Dedupe arrays","description":"Different ways to remove duplicates from an array"},"id":"0b4e1101-a016-5316-b9df-9ac4b69e6475"}},{"node":{"frontmatter":{"slug":"/pill/array-prototype-every()","title":"Array.prototype.every()","description":"This method tests if all the elements in array meets the condition in the provided function."},"id":"af0cb0b6-875f-5025-b190-dcec773e5835"}},{"node":{"frontmatter":{"slug":"/pill/merging-arrays","title":"Merging arrays","description":"If you need to merge two arrays you can use the Array.concat()"},"id":"71fefb9f-faa5-5fa4-93e5-b644c169f8a4"}},{"node":{"frontmatter":{"slug":"/pill/reduce","title":"Reduce","description":"The reduce() method executes a reducer function (that you provide) on each element of the array, resulting in single output value."},"id":"971731f4-fda2-5bf2-a484-aff6a42d74b3"}}]}},"pageContext":{}},"staticQueryHashes":["2744294623","63159454"]}