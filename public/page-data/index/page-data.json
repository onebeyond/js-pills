<<<<<<< HEAD
{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"slug":"/pill/assert-testing","title":"Assert Testing","description":"The assert module provides a set of assertion functions for verifying invariants."},"id":"04f67a47-ce0f-51a8-beda-3797d885be63"}},{"node":{"frontmatter":{"slug":"/pill/replace-all","title":"Replace all","description":"We're presenting several ways to replace all the occurrences of a substring within a string in Javascript."},"id":"516daa37-0d5c-5cb0-8fce-3c08307a04d7"}},{"node":{"frontmatter":{"slug":"/pill/async-await-iterations","title":"Async Await iterations","description":"Do you want to make asynchronous request sequentially? Using async await can be tricky. Let's see why."},"id":"4580e8bf-2f80-56a7-8f47-f336664558d1"}},{"node":{"frontmatter":{"slug":"/pill/in-operator","title":"In operator","description":"The `in` operator returns true if the specified property is in the specified object or its prototype chain."},"id":"2fa50275-52bc-5317-8961-ab272b724432"}},{"node":{"frontmatter":{"slug":"/pill/shuffle-an-arrays-elements","title":"Shuffle an array's elements","description":"Shuffling an array consists on randomly re-arrange the content of that structure. A simple and easy way to shuffle the elements of an array is the following:"},"id":"89d818d8-3bbc-5189-9e71-d6191107c8d4"}},{"node":{"frontmatter":{"slug":"/pill/map","title":"Map","description":"The `map()` method creates a new array with the results of applying a function on every element of an original array without mutating it."},"id":"7df8b072-acb0-5f0f-a629-d42e8aa1b52a"}},{"node":{"frontmatter":{"slug":"/pill/set-default-values","title":"Set Default Values","description":"Here are four ways to set a default value for a variable in JavaScript, each one of them with its pros and cons."},"id":"598b66aa-1041-5e6b-9cb7-fe3cd9f335f3"}},{"node":{"frontmatter":{"slug":"/pill/compose","title":"compose","description":"Compose is a system design principle that allows us to dynamically comibine serveral funcions and returns the resut."},"id":"f6cb9de0-9a0f-5498-bd3c-b7e8e8d425ae"}},{"node":{"frontmatter":{"slug":"/pill/check-conditions-concurrently","title":"Check conditions concurrently","description":"_A system is said to be **concurrent** if it can support two or more actions in progress at the same time. A system is said to be **parallel** if it can support two or more actions executing simultaneously._"},"id":"f55c158c-2d40-50b8-834a-3078ae4aead9"}},{"node":{"frontmatter":{"slug":"/pill/console-methods-explained","title":"Console methods explained","description":"Console methods explained"},"id":"34ee7dd4-255e-52e0-a9d6-35c331827783"}},{"node":{"frontmatter":{"slug":"/pill/creating-an-array-of-consecutive-numbers","title":"Creating an array of consecutive numbers","description":"This is a collection of examples on how we can create an <b>array of consecutive numbers from 1 to n</b> in JavaScript, from the classic for loop to the ES6 Array class methods."},"id":"7f3d258d-0a56-53e2-92a0-02d42f6c14e7"}},{"node":{"frontmatter":{"slug":"/pill/clone-javascript-objects","title":"Clone Javascript Objects","description":"Objects in Javascript are references values, so you can't just copy using assing operator `=`"},"id":"071297f7-29ca-5647-9481-496cda7d1e7c"}},{"node":{"frontmatter":{"slug":"/pill/remove-falsy-values-from-an-array","title":"Remove falsy values from an array","description":"Remove falsy values from an array"},"id":"65a05e88-845a-51a0-be8a-bccb1d071272"}},{"node":{"frontmatter":{"slug":"/pill/converting-to-boolean-using-!!-operator","title":"Converting to boolean using `!!` operator","description":"JavaScript has a Boolean data type. It can **only** take the values true or false, like YES/NO or ON/OFF"},"id":"5c987176-4341-5616-ba48-65ad524b11a2"}},{"node":{"frontmatter":{"slug":"/pill/currying","title":"Currying","description":"This is a technique which involves converting a function which takes multiple arguments into a series of smaller cascaded functions which each take a single argument and return a function, except for the last cascaded function which returns the final result."},"id":"bcdaad13-02ec-5d8c-ada0-6abf5aa81699"}},{"node":{"frontmatter":{"slug":"/pill/dedupe-arrays","title":"Dedupe arrays","description":"Different ways to remove duplicates from an array"},"id":"f1067d02-85db-51d2-a899-e9cc18ab17bb"}},{"node":{"frontmatter":{"slug":"/pill/merging-arrays","title":"Merging arrays","description":"If you need to merge two arrays you can use the Array.concat()"},"id":"58d0286f-1fa4-51be-945f-94f5fddbc472"}},{"node":{"frontmatter":{"slug":"/pill/reduce","title":"Reduce","description":"The reduce() method executes a reducer function (that you provide) on each element of the array, resulting in single output value."},"id":"450ff0d2-35d5-53c3-ab20-e14bf7bfc82f"}},{"node":{"frontmatter":{"slug":"/pill/array-prototype-every()","title":"Array.prototype.every()","description":"This method tests if all the elements in array meets the condition in the provided function."},"id":"e8c353b6-49cd-5187-9f2f-76930f0cc088"}}]}},"pageContext":{}},"staticQueryHashes":["2744294623","63159454"]}
=======
{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"slug":"/pill/assert-testing","title":"Assert Testing","description":"The assert module provides a set of assertion functions for verifying invariants."},"id":"bc9e231f-5bb7-58b4-938d-a64fbd301f79"}},{"node":{"frontmatter":{"slug":"/pill/async-await-iterations","title":"Async Await iterations","description":"Do you want to make asynchronous request sequentially? Using async await can be tricky. Let's see why."},"id":"7352977c-84f1-57cd-8d59-0d95b52ef215"}},{"node":{"frontmatter":{"slug":"/pill/in-operator","title":"In operator","description":"The `in` operator returns true if the specified property is in the specified object or its prototype chain."},"id":"42e2477b-35cc-5d64-a4a7-930a5145821e"}},{"node":{"frontmatter":{"slug":"/pill/shuffle-an-arrays-elements","title":"Shuffle an array's elements","description":"Shuffling an array consists on randomly re-arrange the content of that structure. A simple and easy way to shuffle the elements of an array is the following:"},"id":"1de5fa3f-754e-53e4-a957-2ded2890a14e"}},{"node":{"frontmatter":{"slug":"/pill/creating-an-array-of-consecutive-numbers","title":"Creating an array of consecutive numbers","description":"This is a collection of examples on how we can create an <b>array of consecutive numbers from 1 to n</b> in JavaScript, from the classic for loop to the ES6 Array class methods."},"id":"9c57c13a-0ff9-55e7-aba1-cd203b359399"}},{"node":{"frontmatter":{"slug":"/pill/currying","title":"Currying","description":"This is a technique which involves converting a function which takes multiple arguments into a series of smaller cascaded functions which each take a single argument and return a function, except for the last cascaded function which returns the final result."},"id":"33b0ed7e-37df-5251-8718-9c32db714aa4"}},{"node":{"frontmatter":{"slug":"/pill/dedupe-arrays","title":"Dedupe arrays","description":"Different ways to remove duplicates from an array"},"id":"4dd9835d-a87a-552b-b7ca-b4521447b549"}},{"node":{"frontmatter":{"slug":"/pill/compose","title":"compose","description":"Compose is a system design principle that allows us to dynamically comibine serveral funcions and returns the resut."},"id":"9fc32bc9-d922-5caf-b0e6-eb5b18285889"}},{"node":{"frontmatter":{"slug":"/pill/check-conditions-concurrently","title":"Check conditions concurrently","description":"_A system is said to be **concurrent** if it can support two or more actions in progress at the same time. A system is said to be **parallel** if it can support two or more actions executing simultaneously._"},"id":"fadfb99e-1a28-5560-9834-d776c716a38f"}},{"node":{"frontmatter":{"slug":"/pill/console-methods-explained","title":"Console methods explained","description":"Console methods explained"},"id":"309a91f9-fc1a-5e3e-ab2b-736f85033845"}},{"node":{"frontmatter":{"slug":"/pill/clone-javascript-objects","title":"Clone Javascript Objects","description":"Objects in Javascript are references values, so you can't just copy using assing operator `=`"},"id":"8b56ed4a-a499-5697-b9f3-ef52b64245bb"}},{"node":{"frontmatter":{"slug":"/pill/remove-falsy-values-from-an-array","title":"Remove falsy values from an array","description":"Remove falsy values from an array"},"id":"5b9e67bd-bc00-5b46-9ab9-a87f4aa34707"}},{"node":{"frontmatter":{"slug":"/pill/converting-to-boolean-using-!!-operator","title":"Converting to boolean using `!!` operator","description":"JavaScript has a Boolean data type. It can **only** take the values true or false, like YES/NO or ON/OFF"},"id":"6727ffb3-269e-5497-8cd7-916d4b33430f"}},{"node":{"frontmatter":{"slug":"/pill/reduce","title":"Reduce","description":"The reduce() method executes a reducer function (that you provide) on each element of the array, resulting in single output value."},"id":"d63e55d2-942b-52e4-8609-81aac7aa8500"}},{"node":{"frontmatter":{"slug":"/pill/array-prototype-every()","title":"Array.prototype.every()","description":"This method tests if all the elements in array meets the condition in the provided function."},"id":"485631c0-3dc2-50a5-983f-acda9c1177a1"}},{"node":{"frontmatter":{"slug":"/pill/merging-arrays","title":"Merging arrays","description":"If you need to merge two arrays you can use the Array.concat()"},"id":"1347fef2-8141-5f22-b16d-4cb6f1bc4e65"}},{"node":{"frontmatter":{"slug":"/pill/set-default-values","title":"Set Default Values","description":"Here are four ways to set a default value for a variable in JavaScript, each one of them with its pros and cons."},"id":"6c86a06f-7476-586a-94ba-bb2c068bc2b5"}},{"node":{"frontmatter":{"slug":"/pill/map","title":"Map","description":"The `map()` method creates a new array with the results of applying a function on every element of an original array without mutating it."},"id":"2f8ee58f-0916-52b6-9360-091a7d949493"}},{"node":{"frontmatter":{"slug":"/pill/replace-all","title":"Replace all","description":"We're presenting several ways to replace all the occurrences of a substring within a string in Javascript."},"id":"92c4338b-1cf0-5c03-92f7-67489a9dda2f"}}]}},"pageContext":{}},"staticQueryHashes":["63159454"]}
>>>>>>> afda907c2723eed02f43c410c96b03de830f19c8
