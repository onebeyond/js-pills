{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"slug":"/content/semicolon-usage","title":"Semicolon usage","description":"Semicolons are not required in JavaScript. This is because JavaScript has a feature called Automatic Semicolon Insertion"},"id":"35ceb2cf-f11c-5b0c-91f0-1f2e0bf5fa7a"}},{"node":{"frontmatter":{"slug":"/pill/assert-testing","title":"Assert Testing","description":"The assert module provides a set of assertion functions for verifying invariants."},"id":"a88f6060-1f17-5fcd-9a0d-718e918a0c5d"}},{"node":{"frontmatter":{"slug":"/pill/replace-all","title":"Replace all","description":"We're presenting several ways to replace all the occurrences of a substring within a string in Javascript."},"id":"598fb1e5-cc26-5e74-bcb1-feebfc2ff54a"}},{"node":{"frontmatter":{"slug":"/pill/async-await-iterations","title":"Async Await iterations","description":"Do you want to make asynchronous request sequentially? Using async await can be tricky. Let's see why."},"id":"a564d524-af39-53ba-98f2-49a9f15e70f5"}},{"node":{"frontmatter":{"slug":"/pill/in-operator","title":"In operator","description":"The `in` operator returns true if the specified property is in the specified object or its prototype chain."},"id":"e8665590-58dd-59f7-b25c-08715a47715f"}},{"node":{"frontmatter":{"slug":"/pill/shuffle-an-arrays-elements","title":"Shuffle an array's elements","description":"Shuffling an array consists on randomly re-arrange the content of that structure. A simple and easy way to shuffle the elements of an array is the following:"},"id":"53224070-2b9e-5932-bc8d-93c9f308e5bd"}},{"node":{"frontmatter":{"slug":"/pill/map","title":"Map","description":"The `map()` method creates a new array with the results of applying a function on every element of an original array without mutating it."},"id":"860478d4-5806-5568-b331-9f55c015f028"}},{"node":{"frontmatter":{"slug":"/pill/set-default-values","title":"Set Default Values","description":"Here are four ways to set a default value for a variable in JavaScript, each one of them with its pros and cons."},"id":"6eca5c8b-07b7-58fc-a6fc-aade6556f93a"}},{"node":{"frontmatter":{"slug":"/pill/compose","title":"compose","description":"Compose is a system design principle that allows us to dynamically comibine serveral funcions and returns the resut."},"id":"530160e9-2174-5e89-893b-612efa7dbfce"}},{"node":{"frontmatter":{"slug":"/pill/console-methods-explained","title":"Console methods explained","description":"Console methods explained"},"id":"d2f16795-75da-5be1-8049-dcf7b201542d"}},{"node":{"frontmatter":{"slug":"/pill/check-conditions-concurrently","title":"Check conditions concurrently","description":"_A system is said to be **concurrent** if it can support two or more actions in progress at the same time. A system is said to be **parallel** if it can support two or more actions executing simultaneously._"},"id":"15b55acd-02a2-59b7-a03a-ad2972cefa2c"}},{"node":{"frontmatter":{"slug":"/pill/creating-an-array-of-consecutive-numbers","title":"Creating an array of consecutive numbers","description":"This is a collection of examples on how we can create an <b>array of consecutive numbers from 1 to n</b> in JavaScript, from the classic for loop to the ES6 Array class methods."},"id":"06015f51-8719-59c2-a7d9-45b52934a353"}},{"node":{"frontmatter":{"slug":"/pill/clone-javascript-objects","title":"Clone Javascript Objects","description":"Objects in Javascript are references values, so you can't just copy using assing operator `=`"},"id":"2db2a996-46d4-5507-8332-9d6a0e5183d1"}},{"node":{"frontmatter":{"slug":"/pill/remove-falsy-values-from-an-array","title":"Remove falsy values from an array","description":"Remove falsy values from an array"},"id":"dfcdc1d1-22be-5d1e-a90b-5f6bbcf975c1"}},{"node":{"frontmatter":{"slug":"/pill/converting-to-boolean-using-!!-operator","title":"Converting to boolean using `!!` operator","description":"JavaScript has a Boolean data type. It can **only** take the values true or false, like YES/NO or ON/OFF"},"id":"dda55e1f-1b86-57e0-9a78-36a485f45e51"}},{"node":{"frontmatter":{"slug":"/pill/currying","title":"Currying","description":"This is a technique which involves converting a function which takes multiple arguments into a series of smaller cascaded functions which each take a single argument and return a function, except for the last cascaded function which returns the final result."},"id":"e3997497-1598-56b4-920b-7b46887ff00f"}},{"node":{"frontmatter":{"slug":"/pill/dedupe-arrays","title":"Dedupe arrays","description":"Different ways to remove duplicates from an array"},"id":"4731dd21-80ce-5200-9062-fcf2b69a1b88"}},{"node":{"frontmatter":{"slug":"/pill/reduce","title":"Reduce","description":"The reduce() method executes a reducer function (that you provide) on each element of the array, resulting in single output value."},"id":"8065146a-1bed-5076-922a-109264adc298"}},{"node":{"frontmatter":{"slug":"/pill/merging-arrays","title":"Merging arrays","description":"If you need to merge two arrays you can use the Array.concat()"},"id":"fb2695ea-37c4-5487-8f4d-5627c9e3a2c9"}},{"node":{"frontmatter":{"slug":"/pill/array-prototype-every()","title":"Array.prototype.every()","description":"This method tests if all the elements in array meets the condition in the provided function."},"id":"39426cf9-bff5-55e5-8945-2b2c9dd17994"}}]}},"pageContext":{}},"staticQueryHashes":["2744294623","63159454"]}