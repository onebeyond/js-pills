{"componentChunkName":"component---src-templates-pill-template-index-js","path":"/pill/in-operator","result":{"data":{"markdownRemark":{"html":"<h1>In operator <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/in\">MDN</a></h1>\n<h2>Definition 📚</h2>\n<p>The <code class=\"language-text\">in</code> operator returns true if the specified property is in the specified object or its prototype chain.</p>\n<h2>Syntax 📝</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">prop <span class=\"token keyword\">in</span> object\n\n<span class=\"token keyword\">const</span> object <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> prop1<span class=\"token operator\">:</span> <span class=\"token string\">'value1'</span><span class=\"token punctuation\">,</span> prop2<span class=\"token operator\">:</span> <span class=\"token string\">'value2'</span><span class=\"token punctuation\">,</span> prop3<span class=\"token operator\">:</span> <span class=\"token string\">'value3'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token string\">'prop1'</span> <span class=\"token keyword\">in</span> object<span class=\"token punctuation\">;</span> <span class=\"token comment\">// expected output: true</span></code></pre></div>\n<p>Parameters:</p>\n<ul>\n<li><code class=\"language-text\">object</code>: Object to check if it (or its prototype chain) contains the property with specified name (prop).</li>\n<li><code class=\"language-text\">prop</code>: A string or symbol representing a property name or array index (non-symbols will be coerced to strings).</li>\n</ul>\n<h2>Examples of usage 📐</h2>\n<h3>Basic usage Objects 🗝</h3>\n<p>First, a basic example that check if a property is in an object:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Custom objects</span>\n<span class=\"token keyword\">const</span> car <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> make<span class=\"token operator\">:</span> <span class=\"token string\">'Honda'</span><span class=\"token punctuation\">,</span> model<span class=\"token operator\">:</span> <span class=\"token string\">'Accord'</span><span class=\"token punctuation\">,</span> year<span class=\"token operator\">:</span> <span class=\"token number\">1998</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token string\">'make'</span> <span class=\"token keyword\">in</span> car <span class=\"token comment\">// true</span>\n\n<span class=\"token string\">'irrelevant'</span> <span class=\"token keyword\">in</span> car <span class=\"token comment\">// false</span>\n\n<span class=\"token comment\">// Predefined objects</span>\n<span class=\"token string\">'PI'</span> <span class=\"token keyword\">in</span> Math <span class=\"token comment\">//  true</span></code></pre></div>\n<p>We can see that in operator returns a boolean true when the property exists in an object.</p>\n<h3>Basic usage Arrays 🛋</h3>\n<p>We can also do the same using <code class=\"language-text\">in</code> operator with arrays:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> people <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'trollete'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'patrick'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'anne'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'tim'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token number\">0</span> <span class=\"token keyword\">in</span> people <span class=\"token comment\">//  true</span>\n<span class=\"token number\">3</span> <span class=\"token keyword\">in</span> people <span class=\"token comment\">//  true</span>\n<span class=\"token number\">6</span> <span class=\"token keyword\">in</span> people <span class=\"token comment\">//  false</span>\n<span class=\"token string\">'trollete'</span> <span class=\"token keyword\">in</span> people <span class=\"token comment\">//  false (you must specify the index number, not the value at that index)</span>\n<span class=\"token string\">'length'</span> <span class=\"token keyword\">in</span> people <span class=\"token comment\">//  true (length is an Array property)</span></code></pre></div>\n<p>Which is useful for checking the position of elements in an array</p>\n<h3>Object right side operator 🛀</h3>\n<p>You must specify an object on the right side of the in operator.\nFor example, you can specify a string created with the String constructor, but you cannot specify a string literal.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> color1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">'green'</span><span class=\"token punctuation\">)</span>\n<span class=\"token string\">'length'</span> <span class=\"token keyword\">in</span> color1 <span class=\"token comment\">//  true (color1 is a String object)</span>\n\n<span class=\"token keyword\">let</span> color2 <span class=\"token operator\">=</span> <span class=\"token string\">'coral'</span>\n<span class=\"token string\">'length'</span> <span class=\"token keyword\">in</span> color2 <span class=\"token comment\">// generates an error (color2 is not a String object)</span></code></pre></div>\n<h3>Using in with deleted or undefined properties 🔪</h3>\n<p>If you delete a property with the <code class=\"language-text\">delete</code> operator, the <code class=\"language-text\">in</code> operator returns <code class=\"language-text\">false</code> for that property.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> mycar <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>make<span class=\"token operator\">:</span> <span class=\"token string\">'Honda'</span><span class=\"token punctuation\">,</span> model<span class=\"token operator\">:</span> <span class=\"token string\">'Accord'</span><span class=\"token punctuation\">,</span> year<span class=\"token operator\">:</span> <span class=\"token number\">1998</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">delete</span> mycar<span class=\"token punctuation\">.</span>make\n<span class=\"token string\">'make'</span> <span class=\"token keyword\">in</span> mycar <span class=\"token comment\">// false</span>\n\n<span class=\"token keyword\">let</span> people <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'trollete'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'patrick'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'anne'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'tim'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">delete</span> people<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n<span class=\"token number\">1</span> <span class=\"token keyword\">in</span> people  <span class=\"token comment\">// false</span></code></pre></div>\n<p>If you set a property to <code class=\"language-text\">undefined</code> but do not delete it, the <code class=\"language-text\">in</code> operator returns <code class=\"language-text\">true</code> for that property.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> mycar <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>make<span class=\"token operator\">:</span> <span class=\"token string\">'Honda'</span><span class=\"token punctuation\">,</span> model<span class=\"token operator\">:</span> <span class=\"token string\">'Accord'</span><span class=\"token punctuation\">,</span> year<span class=\"token operator\">:</span> <span class=\"token number\">1998</span><span class=\"token punctuation\">}</span>\nmycar<span class=\"token punctuation\">.</span>make <span class=\"token operator\">=</span> <span class=\"token keyword\">undefined</span>\n<span class=\"token string\">'make'</span> <span class=\"token keyword\">in</span> mycar   <span class=\"token comment\">// returns true</span>\n\n<span class=\"token keyword\">let</span> people <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'trollete'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'patrick'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'anne'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'tim'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npeople<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">undefined</span>\n<span class=\"token number\">4</span> <span class=\"token keyword\">in</span> people  <span class=\"token comment\">// returns true</span></code></pre></div>\n<p>The <code class=\"language-text\">in</code> operator will return <code class=\"language-text\">false</code> for empty array slots. Even if accessing it directly returns <code class=\"language-text\">undefined</code> .</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> empties <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\nempties<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// returns undefined</span>\n<span class=\"token number\">2</span> <span class=\"token keyword\">in</span> empties  <span class=\"token comment\">// returns false</span>\n\n<span class=\"token keyword\">let</span> empties <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">2</span> <span class=\"token keyword\">in</span> empties  <span class=\"token comment\">// returns true</span></code></pre></div>\n<p>To avoid this, make sure a new array is always filled with non-empty values</p>\n<h2> Browser compatibility 🔌</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>✅</th>\n<th>✅</th>\n<th>✅</th>\n<th>✅</th>\n<th>✅</th>\n<th>✅</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>💻</td>\n<td>Chrome</td>\n<td>Edge</td>\n<td>Firefox</td>\n<td>Explorer</td>\n<td>Opera</td>\n<td>Safari</td>\n</tr>\n<tr>\n<td>in</td>\n<td>1</td>\n<td>12</td>\n<td>1</td>\n<td>1</td>\n<td>4</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>","frontmatter":{"date":"December 05, 2020","slug":"/pill/in-operator","title":"In operator","author":""}}},"pageContext":{"slug":"/pill/in-operator"}},"staticQueryHashes":["2744294623","63159454"]}