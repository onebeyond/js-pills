{"componentChunkName":"component---src-templates-pill-template-index-js","path":"/pill/map","result":{"data":{"markdownRemark":{"html":"<h2>Definition</h2>\n<p>The <code class=\"language-text\">map()</code> method creates a new array with the results of applying a function on every element of an original array without mutating it.</p>\n<h2>Syntax</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> newArray <span class=\"token operator\">=</span> oldArray<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">val<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> arr</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Do your logic here</span>\n  <span class=\"token keyword\">return</span> resultOfLogic<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Where:</p>\n<ul>\n<li><code class=\"language-text\">newArray</code>: the new array that is returned.</li>\n<li><code class=\"language-text\">oldArray</code>: the original array to which we apply our logic.</li>\n<li><code class=\"language-text\">val</code>: the array element being processed.</li>\n<li><code class=\"language-text\">index</code>: the index of the array element being processed.</li>\n<li><code class=\"language-text\">arr</code>: the original array.</li>\n</ul>\n<h3>Example 1</h3>\n<p>First, a basic example that doubles every number of an original array:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> doubles <span class=\"token operator\">=</span> numbers<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">num</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> num <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [1, 2, 3, 4, 5]</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>doubles<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [2, 4, 6, 8, 10]</span></code></pre></div>\n<p>We can see that it doesn't mutate the original array.</p>\n<h3>Example 2</h3>\n<p>We can also do the same as above but passing a function directly to the <code class=\"language-text\">map()</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">calculateDouble</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">num</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> num <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> doublesFromMethod <span class=\"token operator\">=</span> numbers<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>calculateDouble<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>doublesFromMethod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [2, 4, 6, 8, 10]</span></code></pre></div>\n<p>Which is useful if the function is going to be used somewhere else or it's too complex and we prefer to separate it for readability.</p>\n<h3>Example 3</h3>\n<p>Here we have an example to generate an array of object with an array of strings using the optional <code class=\"language-text\">index</code> param:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> words <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"This\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"is\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"clearly\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"some\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"random\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"sentence\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> wordsAsObjects <span class=\"token operator\">=</span> words<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    id<span class=\"token operator\">:</span> index<span class=\"token punctuation\">,</span>\n    word<span class=\"token operator\">:</span> value<span class=\"token punctuation\">,</span>\n    length<span class=\"token operator\">:</span> value<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>wordsAsObjects<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [{ id: 0, word: 'This', length: 4 }, ... ]</span></code></pre></div>\n<p>Which gives room to play with our results.</p>\n<h3>Example 4</h3>\n<p>Finally, let's see a comparison between <code class=\"language-text\">for</code> loops and <code class=\"language-text\">map()</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// With 'for' loop</span>\n<span class=\"token keyword\">let</span> doubleWithFor <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> numbers<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  doubleWithFor<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> numbers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>doubleWithFor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [2, 4, 6, 8, 10]</span>\n\n<span class=\"token comment\">// With 'map' function</span>\n<span class=\"token keyword\">const</span> doubleWithMap <span class=\"token operator\">=</span> numbers<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">num</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> num <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>doubleWithMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [2, 4, 6, 8, 10]</span></code></pre></div>\n<p><code class=\"language-text\">map()</code> might be shorter, but it will only be a better solution if we plan on using the resulting array.</p>\n<h2>Browser compatibility</h2>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Browser</th>\n<th align=\"center\">Chrome</th>\n<th align=\"center\">Edge</th>\n<th align=\"center\">IE</th>\n<th align=\"center\">Firefox</th>\n<th align=\"center\">Opera</th>\n<th align=\"center\">Safari</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">Reduce</td>\n<td align=\"center\">1</td>\n<td align=\"center\">12</td>\n<td align=\"center\">9</td>\n<td align=\"center\">1.5</td>\n<td align=\"center\">9.5</td>\n<td align=\"center\">3</td>\n</tr>\n</tbody>\n</table>\n<h2>References</h2>\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\">MDN</a>: for more information about the syntax and examples.</li>\n</ul>","frontmatter":{"date":"December 03, 2020","slug":"/pill/map","title":"Map","author":""}}},"pageContext":{"slug":"/pill/map"}},"staticQueryHashes":["2744294623","63159454"]}